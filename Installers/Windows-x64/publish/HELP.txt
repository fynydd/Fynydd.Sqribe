SQribe is a 64-bit command line tool for Windows, macOS, and Linux, used to backup and restore Microsoft SQL Server databases.

Visit the SQribe website to find out more about SQribe's features.

*** PRESS THE [W] KEY VISIT THE SQRIBE WEBSITE (https://sqribe.app/) ***



H E L P
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
This help content, paged.


Command syntax:
————————————————

    sqribe help



V E R S I O N
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Display the SQribe and Operating System versions.


Command syntax:
————————————————

    sqribe

    - or -

    sqribe version



B A C K U P   A   D A T A B A S E
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Backup a SQL Server database to script files for later restoration.


Command syntax:
————————————————

    sqribe backup [options]


Backup options:
————————————————

/beep_on_completion:
Makes a beep sound when a SQribe operation completes (default: true).

/chunk_data:
Combine table data files into manageable files of a specific size (default: false)

/chunk_size_mb:
Maximum size of data script files/transactions in mb (5-1000; default: 10). Compressed data (see below) will make files smaller than the chunk size.

/compress_data:
Zip data insert script files to save disk space (default: false).

/confirm_start:
Require a keypress to begin a backup (default: true).

/console_dark_mode:
When enabled output is light in color; dark when disabled (default: true).

/data_blacklist:
Specify schema and table names in a comma-separated list to skip generating their data insert statements, for example "dbo.DatabaseLog,dbo.ErrorLog". Blacklisted items can end with a wildcard asterisk (*), for example "dbo.Error*".

/data_source:
Standard SQL Server connection string in quotation marks.

/hash:
Backup hash values are IDs (6 alphanumeric characters) for your backups and are generated for you. This option allows you to override that feature with your own hash value. This can be helpful when you want to, for example, deploy staging database schema changes to production. If both use the same hash, you could backup both separately and then copy the updated schema files into your production database backup, and then restore production.

/logging:
Log activity and exceptions for the most recent use of SQribe to a file named sqribe.log in the sqribe data folder (in your user home folder) at ~/sqribe/ (default: true). Note: this will include private info, like connection strings with passwords.

/max_thread_count:
Maximum number of thread to allow (1-25; default: number of logical processors in the machine).

/objects:
Comma-separated list of objects to script (default is "all"):

    all    = all supported object types and data
    schema = all supported object types but no data

    — OR —

    sc     = schema collections
    table  = tables
    pkc    = table primary key constraints
    index  = table indexes
    fkc    = table foreign key constraints
    cc     = table check constraints
    ftc    = fulltext catalogs
    view   = views
    udf    = user-defined functions
    usp    = stored procedures
    tr     = triggers
    uddt   = user-defined data types
    udtt   = user-defined table types
    dt     = default types
    xsc    = XML schema collections
    xp     = extended properties
    data   = table data

/output_path:
Path for output script files (e.g. "~/Desktop/backups").

/suppress_start_warnings:
When enabled, warning messages will be displayed for output script file overwrites (default: false).

/turbo_mode:
When enabled, table data will be scripted without concern for dependency order (like Microsoft's SqlPackage utility), yielding big speed improvements. This is not recommended for backing up live databases that have active writes as orphaned child rows can be created in the backup.

NOTE: Default backup behaviors can be changed by creating a file named "backup-defaults.json" in the sqribe data folder (in your user home folder) at ~/sqribe/. All properties except "data_source" and "mode" can be set here.



R E S T O R E   A   D A T A B A S E
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
Restore previously backed up database script files.


Command syntax:
————————————————

    sqribe restore [options]


Restore options:
—————————————————

/beep_on_completion:
Makes a beep sound when a SQribe operation completes (default: true).

/confirm_start:
Require a keypress to begin a restore (default: true).

/console_dark_mode:
When enabled output is light in color; dark when disabled (default: true).

/data_source:
Standard SQL Server connection string in quotation marks.

/erase_database:
Drop all tables, indexes, foreign key constraints, views, user-defined data types, user-defined functions, and stored procedures prior to the restore (default: false).

/logging:
Log activity and exceptions for the most recent use of SQribe to a file named sqribe.log in the sqribe data folder (in your user home folder) at ~/sqribe/ (default: true). Note: this will include private info, like connection strings with passwords.

/max_thread_count:
Maximum number of thread to allow (1-25; default: number of logical processors in the machine).

/objects:
Comma-separated list of objects to restore (default is "all")

    all    = all supported object types and data
    schema = all supported object types but no data

    — OR —

    sc     = schema collections
    table  = tables
    pkc    = table primary key constraints
    index  = table indexes
    fkc    = table foreign key constraints
    cc     = table check constraints
    ftc    = fulltext catalogs
    view   = views
    udf    = user-defined functions
    usp    = stored procedures
    tr     = triggers
    uddt   = user-defined data types
    udtt   = user-defined table types
    dt     = default types
    xsc    = XML schema collections
    xp     = extended properties
    data   = table data

/script_path:
Path for source script files (e.g. "~/Desktop/backups").

/suppress_start_warnings:
When enabled warning messages will be displayed for database drops prior to restoration (default: false).

/table_protection:
Specify schema and table names in a comma-separated list to skip drops and data restoration, for example "dbo.DatabaseLog,dbo.ErrorLog". Protected items can end with a wildcard asterisk (*), for example "dbo.Error*".

NOTE: Default restore behaviors can be changed by creating a file named "restore-defaults.json" in the sqribe data folder (in your user home folder) at ~/sqribe/. All properties except "data_source" and "mode" can be set here.



H O W   T O   R U N   A   S C R I P T
▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

You can create JSON files with backup or restore settings and run them from the command line by passing the filename and path to SQribe. This is much easier than using command line arguments!

When options are not specified, defaults are used.


Command syntax:
————————————————

    sqribe sample-backup.json

    - or -

    sqribe sample-backup


Backup file format:
————————————————————
{
    "mode": "backup",
    "beep_on_completion": true,
    "chunk_data": false,
    "chunk_size_mb": 10,
    "compress_data": false,
    "confirm_start": true,
    "console_dark_mode": true,
    "data_blacklist": "",
    "data_source": "server=localhost; database=Adv... etc.",
    "objects": "all",
    "output_path": "~Desktop/out",
    "max_thread_count": 4,
    "suppress_start_warnings": false
}

Restore file format:
—————————————————————
{
    "mode": "restore",
    "beep_on_completion": true,
    "confirm_start": true,
    "console_dark_mode": true,
    "data_source": "server=localhost; database=Adv... etc.",
    "erase_database": true,
    "max_thread_count": 4,
    "objects": "all",
    "script_path": "~/Desktop/out",
    "suppress_start_warnings": false,
    "table_protection": ""
}
